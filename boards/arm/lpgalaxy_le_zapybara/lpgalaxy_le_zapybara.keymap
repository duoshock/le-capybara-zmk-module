/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

#define QWERTY 0
#define NAV_L 1
#define NUM_L 2
#define MED_L 3
#define FUN_L 4

/ {
    tap_dances {
    	shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
        
        tri {
            if-layers = <NUM_L NAV_L>;
            then-layer = <MED_L>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lgui_combo {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp LGUI>;
            layers = <MED_L>;
        };

        l_curly_bracket {
            timeout-ms = <50>;
            key-positions = <1 11>;
            bindings = <&kp LS(LBKT)>;
            layers = <NUM_L>;
        };

        r_curly_bracket {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&kp LS(RBKT)>;
            layers = <NUM_L>;
        };

        lbracket {
            timeout-ms = <50>;
            key-positions = <11 21>;
            bindings = <&kp LBKT>;
            layers = <NUM_L>;
        };

        rbracket {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp RBKT>;
            layers = <NUM_L>;
        };

        ques_mark_combo {
            timeout-ms = <50>;
            key-positions = <18 28>;
            bindings = <&kp LS(FSLH)>;
        };

        bslash_combo {
            timeout-ms = <50>;
            key-positions = <9 19>;
            bindings = <&kp BSLH>;
        };

        fslash_combo {
            timeout-ms = <50>;
            key-positions = <19 29>;
            bindings = <&kp FSLH>;
        };

        bootloader_combo {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&bootloader>;
            layers = <MED_L>;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        qwerty_layer {
            label = "Qwerty";
            bindings = <
                &kp ESC     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS  &kp EQUAL  &kp GRAVE       &kp BSPC      &kp INS
                &kp TABg            &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT                       &kp BSLH      &kp DEL
                &kp BSPC                &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT                           &kp RET
                &kp LSHFT                   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH             &kp RSHIFT    &kp UP
                &kp LCTRL  &kp LWIN   &kp LALT       &kp F1        &kp SPACE       &kp F2     &kp RCTRL  &kp RWIN    &kp RALT       &kp LEFT      &kp DOWN      &kp RIGHT
            >;
        };
    };
};
